# Generated by Django 5.2.5 on 2025-08-07 14:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('players', '0001_initial'),
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_date', models.DateTimeField()),
                ('game_type', models.CharField(choices=[('regular', 'Regular Season'), ('playoff', 'Playoff'), ('preseason', 'Preseason'), ('all_star', 'All-Star Game')], default='regular', max_length=20)),
                ('home_score', models.PositiveIntegerField(default=0)),
                ('away_score', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('final', 'Final'), ('overtime', 'Final (OT)'), ('shootout', 'Final (SO)'), ('postponed', 'Postponed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('periods_played', models.PositiveIntegerField(default=0)),
                ('overtime_periods', models.PositiveIntegerField(default=0)),
                ('shootout', models.BooleanField(default=False)),
                ('attendance', models.PositiveIntegerField(blank=True, null=True)),
                ('venue', models.CharField(blank=True, max_length=200)),
                ('nhl_game_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='teams.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='teams.team')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='teams.season')),
            ],
            options={
                'ordering': ['-game_date'],
                'unique_together': {('home_team', 'away_team', 'game_date')},
            },
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('goal', 'Goal'), ('assist', 'Assist'), ('penalty', 'Penalty'), ('save', 'Save'), ('shot', 'Shot'), ('hit', 'Hit'), ('blocked_shot', 'Blocked Shot'), ('faceoff', 'Faceoff'), ('giveaway', 'Giveaway'), ('takeaway', 'Takeaway')], max_length=20)),
                ('period', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('time_in_period', models.CharField(max_length=10)),
                ('game_time_seconds', models.PositiveIntegerField()),
                ('event_details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='games.game')),
                ('primary_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_events', to='players.player')),
                ('secondary_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_events', to='players.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_events', to='teams.team')),
            ],
            options={
                'ordering': ['game_time_seconds'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('time_in_period', models.CharField(max_length=10)),
                ('game_time_seconds', models.PositiveIntegerField()),
                ('goal_type', models.CharField(choices=[('even_strength', 'Even Strength'), ('power_play', 'Power Play'), ('short_handed', 'Short Handed'), ('penalty_shot', 'Penalty Shot'), ('empty_net', 'Empty Net')], default='even_strength', max_length=20)),
                ('home_players_on_ice', models.PositiveIntegerField(default=6)),
                ('away_players_on_ice', models.PositiveIntegerField(default=6)),
                ('assist1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_assists', to='players.player')),
                ('assist2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_assists', to='players.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='games.game')),
                ('scorer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals_scored', to='players.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals_for', to='teams.team')),
            ],
            options={
                'ordering': ['game', 'game_time_seconds'],
            },
        ),
        migrations.CreateModel(
            name='PlayerGameStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.BooleanField(default=True)),
                ('starter', models.BooleanField(default=False)),
                ('goals', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('points', models.PositiveIntegerField(default=0)),
                ('plus_minus', models.IntegerField(default=0)),
                ('penalty_minutes', models.PositiveIntegerField(default=0)),
                ('shots_on_goal', models.PositiveIntegerField(default=0)),
                ('shots_missed', models.PositiveIntegerField(default=0)),
                ('shots_blocked', models.PositiveIntegerField(default=0)),
                ('time_on_ice_seconds', models.PositiveIntegerField(default=0)),
                ('hits', models.PositiveIntegerField(default=0)),
                ('blocked_shots', models.PositiveIntegerField(default=0)),
                ('faceoff_wins', models.PositiveIntegerField(default=0)),
                ('faceoff_attempts', models.PositiveIntegerField(default=0)),
                ('saves', models.PositiveIntegerField(default=0)),
                ('goals_against', models.PositiveIntegerField(default=0)),
                ('shots_against', models.PositiveIntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='games.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_stats', to='players.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
            options={
                'ordering': ['-game__game_date', '-points'],
                'unique_together': {('player', 'game')},
            },
        ),
    ]
